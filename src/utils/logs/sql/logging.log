sql [2021-06-25 08:41:45] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 08:44:31] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 08:56:31] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 08:57:04] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 08:57:40] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 08:59:54] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:00:21] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:00:41] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:01:56] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:02:18] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:10:54] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:16:53] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:17:10] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:17:37] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:19:14] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:21:08] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:21:33] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:21:41] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:25:23] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:37:19] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:37:42] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:37:55] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:38:39] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:40:18] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:41:10] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:42:23] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:46:52] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:47:00] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:47:53] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:52:40] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 09:56:19] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 10:04:24] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 10:04:29] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 10:04:54] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 10:05:12] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 10:06:21] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 10:29:15] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 10:47:07] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 10:48:03] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 10:57:00] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 10:57:04] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 10:57:39] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 10:57:54] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 10:58:03] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 11:02:21] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 11:02:25] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 11:02:27] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 11:03:33] [DEBUG]: Executing (default): SELECT 1+1 AS result

sql [2021-06-25 11:03:33] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `articles` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '文章标题', `subTitle` VARCHAR(255) COMMENT '文章副标题', `imgUrl` VARCHAR(255) NOT NULL COMMENT '文章的图片，不能为空', `content` TEXT COMMENT '文章内容，存一个html文件', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 11:03:33] [DEBUG]: Executing (default): SHOW INDEX FROM `articles`

sql [2021-06-25 11:03:33] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `readLikes` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `readNum` INTEGER COMMENT '文章阅读量', `likeNum` INTEGER COMMENT '文章点赞量', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-25 11:03:33] [DEBUG]: Executing (default): SHOW INDEX FROM `readLikes`

sql [2021-06-25 11:03:33] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `nickName` VARCHAR(100) COMMENT '用户的昵称', `accounter` VARCHAR(100) NOT NULL COMMENT '账号', `email` VARCHAR(255) NOT NULL COMMENT '邮箱', `avatar` TEXT NOT NULL COMMENT '用户头像', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 11:03:33] [DEBUG]: Executing (default): SHOW INDEX FROM `users`

sql [2021-06-25 11:03:33] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `comments` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `content` TEXT COMMENT '评论内容', `pid` INTEGER COMMENT '父级id,用于处理评论的父级节点', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-25 11:03:33] [DEBUG]: Executing (default): SHOW INDEX FROM `comments`

sql [2021-06-25 11:03:33] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `myselves` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `enName` VARCHAR(100) COMMENT '英文名字', `znName` VARCHAR(100) COMMENT '中文名字', `sex` TINYINT(1) COMMENT '性别', `selfIntroduce` VARCHAR(255) COMMENT '个人简介', `birthday` VARCHAR(100) COMMENT '出生日期', `startWork` VARCHAR(100) COMMENT '开始工作', `schoolName` VARCHAR(100) COMMENT '学校名称', `mayjor` VARCHAR(100) COMMENT '专业', `education` VARCHAR(100) COMMENT '学历', `companyName` VARCHAR(100) COMMENT '所属公司名称', `postName` VARCHAR(100) COMMENT '岗位名称', `industry` VARCHAR(100) COMMENT '所属行业', `skill` VARCHAR(255) COMMENT '个人的技能', `hobby` VARCHAR(255) COMMENT '兴趣爱好', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 11:03:33] [DEBUG]: Executing (default): SHOW INDEX FROM `myselves`

sql [2021-06-25 11:03:33] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `projects` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '项目的标题', `desc` TEXT COMMENT '项目描述', `projectUrl` VARCHAR(100) NOT NULL COMMENT '项目地址', `gitupUrl` VARCHAR(100) COMMENT 'gitup 地址', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 11:03:33] [DEBUG]: Executing (default): SHOW INDEX FROM `projects`

sql [2021-06-25 11:03:33] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `tagClouds` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `name` VARCHAR(100) NOT NULL COMMENT '标签名称', `code` VARCHAR(100) COMMENT '标签的code,备用', `logo` TEXT COMMENT '云图标的logo,是一个base64位的的字符串', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 11:03:33] [DEBUG]: Executing (default): SHOW INDEX FROM `tagClouds`

sql [2021-06-25 11:03:33] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagCloudArticles` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `tagCloudId` INTEGER , `articleId` INTEGER , PRIMARY KEY (`tagCloudId`, `articleId`), FOREIGN KEY (`tagCloudId`) REFERENCES `tagClouds` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-25 11:03:33] [DEBUG]: Executing (default): SHOW INDEX FROM `TagCloudArticles`

sql [2021-06-25 11:05:47] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `hobby`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 11:10:48] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `hobby`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 11:10:54] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `hobby`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 11:20:03] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `hobby`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 11:22:48] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `hobby`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 11:24:57] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `hobby`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 11:29:11] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `hobby`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 12:03:16] [DEBUG]: Executing (default): SELECT `id`, `enName`, `znName`, `sex`, `selfIntroduce`, `birthday`, `startWork`, `schoolName`, `mayjor`, `education`, `companyName`, `postName`, `industry`, `skill`, `hobby`, `createdAt`, `updatedAt` FROM `myselves` AS `myself`;

sql [2021-06-25 14:33:26] [DEBUG]: Executing (default): SELECT `id`, `name`, `code`, `logo`, `createdAt`, `updatedAt`, `deletedAt` FROM `tagClouds` AS `tagCloud` WHERE (`tagCloud`.`deletedAt` IS NULL);

sql [2021-06-25 14:51:31] [DEBUG]: Executing (default): SELECT 1+1 AS result

sql [2021-06-25 14:51:31] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `articles` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '文章标题', `subTitle` VARCHAR(255) COMMENT '文章副标题', `imgUrl` VARCHAR(255) NOT NULL COMMENT '文章的图片，不能为空', `content` TEXT COMMENT '文章内容，存一个html文件', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 14:51:31] [DEBUG]: Executing (default): SHOW INDEX FROM `articles`

sql [2021-06-25 14:51:31] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `readLikes` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `readNum` INTEGER COMMENT '文章阅读量', `likeNum` INTEGER COMMENT '文章点赞量', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-25 14:51:31] [DEBUG]: Executing (default): SHOW INDEX FROM `readLikes`

sql [2021-06-25 14:51:31] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `nickName` VARCHAR(100) COMMENT '用户的昵称', `accounter` VARCHAR(100) NOT NULL COMMENT '账号', `email` VARCHAR(255) NOT NULL COMMENT '邮箱', `avatar` TEXT NOT NULL COMMENT '用户头像', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 14:51:31] [DEBUG]: Executing (default): SHOW INDEX FROM `users`

sql [2021-06-25 14:51:31] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `comments` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `content` TEXT COMMENT '评论内容', `pid` INTEGER COMMENT '父级id,用于处理评论的父级节点', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-25 14:51:31] [DEBUG]: Executing (default): SHOW INDEX FROM `comments`

sql [2021-06-25 14:51:31] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `myselves` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `enName` VARCHAR(100) COMMENT '英文名字', `znName` VARCHAR(100) COMMENT '中文名字', `sex` TINYINT(1) COMMENT '性别', `selfIntroduce` VARCHAR(255) COMMENT '个人简介', `birthday` VARCHAR(100) COMMENT '出生日期', `startWork` VARCHAR(100) COMMENT '开始工作', `schoolName` VARCHAR(100) COMMENT '学校名称', `mayjor` VARCHAR(100) COMMENT '专业', `education` VARCHAR(100) COMMENT '学历', `companyName` VARCHAR(100) COMMENT '所属公司名称', `postName` VARCHAR(100) COMMENT '岗位名称', `industry` VARCHAR(100) COMMENT '所属行业', `skill` VARCHAR(255) COMMENT '个人的技能', `hobby` VARCHAR(255) COMMENT '兴趣爱好', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 14:51:31] [DEBUG]: Executing (default): SHOW INDEX FROM `myselves`

sql [2021-06-25 14:51:31] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `projects` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '项目的标题', `desc` TEXT COMMENT '项目描述', `projectUrl` VARCHAR(100) NOT NULL COMMENT '项目地址', `gitupUrl` VARCHAR(100) COMMENT 'gitup 地址', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 14:51:31] [DEBUG]: Executing (default): SHOW INDEX FROM `projects`

sql [2021-06-25 14:51:31] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `tagClouds` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `name` VARCHAR(100) NOT NULL COMMENT '标签名称', `code` VARCHAR(100) COMMENT '标签的code,备用', `logo` TEXT COMMENT '云图标的logo,是一个base64位的的字符串', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 14:51:31] [DEBUG]: Executing (default): SHOW INDEX FROM `tagClouds`

sql [2021-06-25 14:51:31] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagCloudArticles` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `tagCloudId` INTEGER , `articleId` INTEGER , PRIMARY KEY (`tagCloudId`, `articleId`), FOREIGN KEY (`tagCloudId`) REFERENCES `tagClouds` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-25 14:51:31] [DEBUG]: Executing (default): SHOW INDEX FROM `TagCloudArticles`

sql [2021-06-25 14:53:41] [DEBUG]: Executing (default): SELECT 1+1 AS result

sql [2021-06-25 14:53:41] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `articles` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '文章标题', `subTitle` VARCHAR(255) COMMENT '文章副标题', `imgUrl` VARCHAR(255) NOT NULL COMMENT '文章的图片，不能为空', `content` TEXT COMMENT '文章内容，存一个html文件', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 14:53:41] [DEBUG]: Executing (default): SHOW INDEX FROM `articles`

sql [2021-06-25 14:53:41] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `readLikes` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `readNum` INTEGER COMMENT '文章阅读量', `likeNum` INTEGER COMMENT '文章点赞量', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-25 14:53:41] [DEBUG]: Executing (default): SHOW INDEX FROM `readLikes`

sql [2021-06-25 14:53:41] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `nickName` VARCHAR(100) COMMENT '用户的昵称', `accounter` VARCHAR(100) NOT NULL COMMENT '账号', `email` VARCHAR(255) NOT NULL COMMENT '邮箱', `avatar` TEXT NOT NULL COMMENT '用户头像', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 14:53:41] [DEBUG]: Executing (default): SHOW INDEX FROM `users`

sql [2021-06-25 14:53:41] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `comments` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `content` TEXT COMMENT '评论内容', `pid` INTEGER COMMENT '父级id,用于处理评论的父级节点', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-25 14:53:41] [DEBUG]: Executing (default): SHOW INDEX FROM `comments`

sql [2021-06-25 14:53:41] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `myselves` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `enName` VARCHAR(100) COMMENT '英文名字', `znName` VARCHAR(100) COMMENT '中文名字', `sex` TINYINT(1) COMMENT '性别', `selfIntroduce` VARCHAR(255) COMMENT '个人简介', `birthday` VARCHAR(100) COMMENT '出生日期', `startWork` VARCHAR(100) COMMENT '开始工作', `schoolName` VARCHAR(100) COMMENT '学校名称', `mayjor` VARCHAR(100) COMMENT '专业', `education` VARCHAR(100) COMMENT '学历', `companyName` VARCHAR(100) COMMENT '所属公司名称', `postName` VARCHAR(100) COMMENT '岗位名称', `industry` VARCHAR(100) COMMENT '所属行业', `skill` VARCHAR(255) COMMENT '个人的技能', `hobby` VARCHAR(255) COMMENT '兴趣爱好', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 14:53:41] [DEBUG]: Executing (default): SHOW INDEX FROM `myselves`

sql [2021-06-25 14:53:41] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `projects` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '项目的标题', `desc` TEXT COMMENT '项目描述', `projectUrl` VARCHAR(100) NOT NULL COMMENT '项目地址', `gitupUrl` VARCHAR(100) COMMENT 'gitup 地址', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 14:53:41] [DEBUG]: Executing (default): SHOW INDEX FROM `projects`

sql [2021-06-25 14:53:41] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `tagClouds` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `name` VARCHAR(100) NOT NULL COMMENT '标签名称', `code` VARCHAR(100) COMMENT '标签的code,备用', `logo` TEXT COMMENT '云图标的logo,是一个base64位的的字符串', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 14:53:41] [DEBUG]: Executing (default): SHOW INDEX FROM `tagClouds`

sql [2021-06-25 14:53:41] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagCloudArticles` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `tagCloudId` INTEGER , `articleId` INTEGER , PRIMARY KEY (`tagCloudId`, `articleId`), FOREIGN KEY (`tagCloudId`) REFERENCES `tagClouds` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-25 14:53:41] [DEBUG]: Executing (default): SHOW INDEX FROM `TagCloudArticles`

sql [2021-06-25 14:54:25] [DEBUG]: Executing (default): SELECT 1+1 AS result

sql [2021-06-25 14:54:25] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `articles` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '文章标题', `subTitle` VARCHAR(255) COMMENT '文章副标题', `imgUrl` VARCHAR(255) NOT NULL COMMENT '文章的图片，不能为空', `content` TEXT COMMENT '文章内容，存一个html文件', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 14:54:25] [DEBUG]: Executing (default): SHOW INDEX FROM `articles`

sql [2021-06-25 14:54:25] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `readLikes` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `readNum` INTEGER COMMENT '文章阅读量', `likeNum` INTEGER COMMENT '文章点赞量', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-25 14:54:25] [DEBUG]: Executing (default): SHOW INDEX FROM `readLikes`

sql [2021-06-25 14:54:25] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `nickName` VARCHAR(100) COMMENT '用户的昵称', `accounter` VARCHAR(100) NOT NULL COMMENT '账号', `email` VARCHAR(255) NOT NULL COMMENT '邮箱', `avatar` TEXT NOT NULL COMMENT '用户头像', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 14:54:25] [DEBUG]: Executing (default): SHOW INDEX FROM `users`

sql [2021-06-25 14:54:25] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `comments` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `content` TEXT COMMENT '评论内容', `pid` INTEGER COMMENT '父级id,用于处理评论的父级节点', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-25 14:54:25] [DEBUG]: Executing (default): SHOW INDEX FROM `comments`

sql [2021-06-25 14:54:25] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `myselves` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `enName` VARCHAR(100) COMMENT '英文名字', `znName` VARCHAR(100) COMMENT '中文名字', `sex` TINYINT(1) COMMENT '性别', `selfIntroduce` VARCHAR(255) COMMENT '个人简介', `birthday` VARCHAR(100) COMMENT '出生日期', `startWork` VARCHAR(100) COMMENT '开始工作', `schoolName` VARCHAR(100) COMMENT '学校名称', `mayjor` VARCHAR(100) COMMENT '专业', `education` VARCHAR(100) COMMENT '学历', `companyName` VARCHAR(100) COMMENT '所属公司名称', `postName` VARCHAR(100) COMMENT '岗位名称', `industry` VARCHAR(100) COMMENT '所属行业', `skill` VARCHAR(255) COMMENT '个人的技能', `hobby` VARCHAR(255) COMMENT '兴趣爱好', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 14:54:25] [DEBUG]: Executing (default): SHOW INDEX FROM `myselves`

sql [2021-06-25 14:54:25] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `projects` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '项目的标题', `desc` TEXT COMMENT '项目描述', `projectUrl` VARCHAR(100) NOT NULL COMMENT '项目地址', `gitupUrl` VARCHAR(100) COMMENT 'gitup 地址', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 14:54:25] [DEBUG]: Executing (default): SHOW INDEX FROM `projects`

sql [2021-06-25 14:54:25] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `tagClouds` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `name` VARCHAR(100) NOT NULL COMMENT '标签名称', `code` VARCHAR(100) COMMENT '标签的code,备用', `logo` TEXT COMMENT '云图标的logo,是一个base64位的的字符串', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 14:54:25] [DEBUG]: Executing (default): SHOW INDEX FROM `tagClouds`

sql [2021-06-25 14:54:25] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagCloudArticles` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `tagCloudId` INTEGER , `articleId` INTEGER , PRIMARY KEY (`tagCloudId`, `articleId`), FOREIGN KEY (`tagCloudId`) REFERENCES `tagClouds` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-25 14:54:25] [DEBUG]: Executing (default): SHOW INDEX FROM `TagCloudArticles`

sql [2021-06-25 14:54:27] [DEBUG]: Executing (default): SELECT
      t.*,
      COUNT( tc.articleId ) AS articleCounts 
    FROM
      tagclouds AS t,
      tagcloudarticles tc 
    WHERE
      t.id = tc.tagCloudId 
    GROUP BY
      t.NAME

sql [2021-06-25 15:25:53] [DEBUG]: Executing (default): SELECT 1+1 AS result

sql [2021-06-25 15:25:53] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `articles` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '文章标题', `subTitle` VARCHAR(255) COMMENT '文章副标题', `imgUrl` VARCHAR(255) NOT NULL COMMENT '文章的图片，不能为空', `content` TEXT COMMENT '文章内容，存一个html文件', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 15:25:53] [DEBUG]: Executing (default): SHOW INDEX FROM `articles`

sql [2021-06-25 15:25:53] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `readLikes` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `readNum` INTEGER COMMENT '文章阅读量', `likeNum` INTEGER COMMENT '文章点赞量', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-25 15:25:53] [DEBUG]: Executing (default): SHOW INDEX FROM `readLikes`

sql [2021-06-25 15:25:53] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `nickName` VARCHAR(100) COMMENT '用户的昵称', `accounter` VARCHAR(100) NOT NULL COMMENT '账号', `email` VARCHAR(255) NOT NULL COMMENT '邮箱', `avatar` TEXT NOT NULL COMMENT '用户头像', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 15:25:53] [DEBUG]: Executing (default): SHOW INDEX FROM `users`

sql [2021-06-25 15:25:53] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `comments` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `content` TEXT COMMENT '评论内容', `pid` INTEGER COMMENT '父级id,用于处理评论的父级节点', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-25 15:25:53] [DEBUG]: Executing (default): SHOW INDEX FROM `comments`

sql [2021-06-25 15:25:53] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `myselves` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `enName` VARCHAR(100) COMMENT '英文名字', `znName` VARCHAR(100) COMMENT '中文名字', `sex` TINYINT(1) COMMENT '性别', `selfIntroduce` VARCHAR(255) COMMENT '个人简介', `birthday` VARCHAR(100) COMMENT '出生日期', `startWork` VARCHAR(100) COMMENT '开始工作', `schoolName` VARCHAR(100) COMMENT '学校名称', `mayjor` VARCHAR(100) COMMENT '专业', `education` VARCHAR(100) COMMENT '学历', `companyName` VARCHAR(100) COMMENT '所属公司名称', `postName` VARCHAR(100) COMMENT '岗位名称', `industry` VARCHAR(100) COMMENT '所属行业', `skill` VARCHAR(255) COMMENT '个人的技能', `hobby` VARCHAR(255) COMMENT '兴趣爱好', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 15:25:53] [DEBUG]: Executing (default): SHOW INDEX FROM `myselves`

sql [2021-06-25 15:25:53] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `projects` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '项目的标题', `desc` TEXT COMMENT '项目描述', `projectUrl` VARCHAR(100) NOT NULL COMMENT '项目地址', `gitupUrl` VARCHAR(100) COMMENT 'gitup 地址', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 15:25:53] [DEBUG]: Executing (default): SHOW INDEX FROM `projects`

sql [2021-06-25 15:25:53] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `tagClouds` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `name` VARCHAR(100) NOT NULL COMMENT '标签名称', `code` VARCHAR(100) COMMENT '标签的code,备用', `logo` TEXT COMMENT '云图标的logo,是一个base64位的的字符串', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 15:25:53] [DEBUG]: Executing (default): SHOW INDEX FROM `tagClouds`

sql [2021-06-25 15:25:53] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagCloudArticles` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `tagCloudId` INTEGER , `articleId` INTEGER , PRIMARY KEY (`tagCloudId`, `articleId`), FOREIGN KEY (`tagCloudId`) REFERENCES `tagClouds` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-25 15:25:53] [DEBUG]: Executing (default): SHOW INDEX FROM `TagCloudArticles`

sql [2021-06-25 15:26:11] [DEBUG]: Executing (default): SELECT 1+1 AS result

sql [2021-06-25 15:26:11] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `articles` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '文章标题', `subTitle` VARCHAR(255) COMMENT '文章副标题', `imgUrl` VARCHAR(255) NOT NULL COMMENT '文章的图片，不能为空', `content` TEXT COMMENT '文章内容，存一个html文件', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 15:26:11] [DEBUG]: Executing (default): SHOW INDEX FROM `articles`

sql [2021-06-25 15:26:11] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `readLikes` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `readNum` INTEGER COMMENT '文章阅读量', `likeNum` INTEGER COMMENT '文章点赞量', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-25 15:26:11] [DEBUG]: Executing (default): SHOW INDEX FROM `readLikes`

sql [2021-06-25 15:26:11] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `nickName` VARCHAR(100) COMMENT '用户的昵称', `accounter` VARCHAR(100) NOT NULL COMMENT '账号', `email` VARCHAR(255) NOT NULL COMMENT '邮箱', `avatar` TEXT NOT NULL COMMENT '用户头像', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 15:26:11] [DEBUG]: Executing (default): SHOW INDEX FROM `users`

sql [2021-06-25 15:26:11] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `comments` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `content` TEXT COMMENT '评论内容', `pid` INTEGER COMMENT '父级id,用于处理评论的父级节点', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-25 15:26:11] [DEBUG]: Executing (default): SHOW INDEX FROM `comments`

sql [2021-06-25 15:26:11] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `myselves` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `enName` VARCHAR(100) COMMENT '英文名字', `znName` VARCHAR(100) COMMENT '中文名字', `sex` TINYINT(1) COMMENT '性别', `selfIntroduce` VARCHAR(255) COMMENT '个人简介', `birthday` VARCHAR(100) COMMENT '出生日期', `startWork` VARCHAR(100) COMMENT '开始工作', `schoolName` VARCHAR(100) COMMENT '学校名称', `mayjor` VARCHAR(100) COMMENT '专业', `education` VARCHAR(100) COMMENT '学历', `companyName` VARCHAR(100) COMMENT '所属公司名称', `postName` VARCHAR(100) COMMENT '岗位名称', `industry` VARCHAR(100) COMMENT '所属行业', `skill` VARCHAR(255) COMMENT '个人的技能', `hobby` VARCHAR(255) COMMENT '兴趣爱好', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 15:26:11] [DEBUG]: Executing (default): SHOW INDEX FROM `myselves`

sql [2021-06-25 15:26:11] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `projects` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '项目的标题', `desc` TEXT COMMENT '项目描述', `projectUrl` VARCHAR(100) NOT NULL COMMENT '项目地址', `gitupUrl` VARCHAR(100) COMMENT 'gitup 地址', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 15:26:11] [DEBUG]: Executing (default): SHOW INDEX FROM `projects`

sql [2021-06-25 15:26:11] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `tagClouds` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `name` VARCHAR(100) NOT NULL COMMENT '标签名称', `code` VARCHAR(100) COMMENT '标签的code,备用', `logo` TEXT COMMENT '云图标的logo,是一个base64位的的字符串', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-25 15:26:11] [DEBUG]: Executing (default): SHOW INDEX FROM `tagClouds`

sql [2021-06-25 15:26:11] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagCloudArticles` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `tagCloudId` INTEGER , `articleId` INTEGER , PRIMARY KEY (`tagCloudId`, `articleId`), FOREIGN KEY (`tagCloudId`) REFERENCES `tagClouds` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-25 15:26:11] [DEBUG]: Executing (default): SHOW INDEX FROM `TagCloudArticles`

