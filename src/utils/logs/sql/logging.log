sql [2021-06-18 07:36:11] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `projects` AS `project`;

sql [2021-06-18 07:36:11] [DEBUG]: Executing (default): SELECT `id`, `title`, `desc`, `projectUrl`, `gitupUrl`, `createdAt`, `updatedAt` FROM `projects` AS `project` LIMIT 90, 10;

sql [2021-06-18 07:37:36] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `projects` AS `project`;

sql [2021-06-18 07:37:36] [DEBUG]: Executing (default): SELECT `id`, `title`, `desc`, `projectUrl`, `gitupUrl`, `createdAt`, `updatedAt` FROM `projects` AS `project` LIMIT 2, 2;

sql [2021-06-18 07:37:50] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `projects` AS `project`;

sql [2021-06-18 07:37:50] [DEBUG]: Executing (default): SELECT `id`, `title`, `desc`, `projectUrl`, `gitupUrl`, `createdAt`, `updatedAt` FROM `projects` AS `project` LIMIT 2, 2;

sql [2021-06-18 07:37:55] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `projects` AS `project`;

sql [2021-06-18 07:37:55] [DEBUG]: Executing (default): SELECT `id`, `title`, `desc`, `projectUrl`, `gitupUrl`, `createdAt`, `updatedAt` FROM `projects` AS `project` LIMIT 2, 2;

sql [2021-06-18 07:38:50] [DEBUG]: Executing (default): SELECT 1+1 AS result

sql [2021-06-18 07:38:50] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tests` (`id` INTEGER auto_increment , `testName` VARCHAR(100) NOT NULL COMMENT '测试name', `testCode` VARCHAR(100) COMMENT '测试code', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:38:50] [DEBUG]: Executing (default): SHOW INDEX FROM `Tests`

sql [2021-06-18 07:38:50] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `myselves` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `enName` VARCHAR(100) COMMENT '英文名字', `znName` VARCHAR(100) COMMENT '中文名字', `sex` TINYINT(1) COMMENT '性别', `selfIntroduce` VARCHAR(255) COMMENT '个人简介', `birthday` VARCHAR(100) COMMENT '出生日期', `startWork` VARCHAR(100) COMMENT '开始工作', `schoolName` VARCHAR(100) COMMENT '学校名称', `mayjor` VARCHAR(100) COMMENT '专业', `education` VARCHAR(100) COMMENT '学历', `companyName` VARCHAR(100) COMMENT '所属公司名称', `postName` VARCHAR(100) COMMENT '岗位名称', `industry` VARCHAR(100) COMMENT '所属行业', `skill` VARCHAR(255) COMMENT '个人的技能', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:38:50] [DEBUG]: Executing (default): SHOW INDEX FROM `myselves`

sql [2021-06-18 07:38:50] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `projects` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '项目的标题', `desc` TEXT COMMENT '项目描述', `projectUrl` VARCHAR(100) NOT NULL COMMENT '项目地址', `gitupUrl` VARCHAR(100) COMMENT 'gitup 地址', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:38:50] [DEBUG]: Executing (default): SHOW INDEX FROM `projects`

sql [2021-06-18 07:38:50] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `articles` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '文章标题', `subTitle` VARCHAR(255) COMMENT '文章副标题', `imgUrl` VARCHAR(255) NOT NULL COMMENT '文章的图片，不能为空', `content` TEXT COMMENT '文章内容，存一个html文件', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:38:50] [DEBUG]: Executing (default): SHOW INDEX FROM `articles`

sql [2021-06-18 07:38:50] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `readLikes` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `readNum` INTEGER COMMENT '文章阅读量', `likeNum` INTEGER COMMENT '文章点赞量', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:38:50] [DEBUG]: Executing (default): SHOW INDEX FROM `readLikes`

sql [2021-06-18 07:38:50] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `nickName` VARCHAR(100) COMMENT '用户的昵称', `accounter` VARCHAR(100) NOT NULL COMMENT '账号', `avatar` TEXT COMMENT '用户头像', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:38:50] [DEBUG]: Executing (default): SHOW INDEX FROM `users`

sql [2021-06-18 07:38:50] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `comments` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `content` TEXT COMMENT '评论内容', `pid` INTEGER COMMENT '父级id,用于处理评论的父级节点', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:38:50] [DEBUG]: Executing (default): SHOW INDEX FROM `comments`

sql [2021-06-18 07:38:50] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagClouds` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `name` VARCHAR(100) NOT NULL COMMENT '标签名称', `code` VARCHAR(40) COMMENT '标签的code,备用', `logo` TEXT COMMENT '云图标的logo,是一个base64位的的字符串', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:38:50] [DEBUG]: Executing (default): SHOW INDEX FROM `TagClouds`

sql [2021-06-18 07:38:50] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagCloudArticle` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `TagCloudId` INTEGER , `articleId` INTEGER , PRIMARY KEY (`TagCloudId`, `articleId`), FOREIGN KEY (`TagCloudId`) REFERENCES `TagClouds` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:38:50] [DEBUG]: Executing (default): SHOW INDEX FROM `TagCloudArticle`

sql [2021-06-18 07:39:15] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `projects` AS `project`;

sql [2021-06-18 07:39:15] [DEBUG]: Executing (default): SELECT `id`, `title`, `desc`, `projectUrl`, `gitupUrl`, `createdAt`, `updatedAt` FROM `projects` AS `project` LIMIT 0, 2;

sql [2021-06-18 07:39:25] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `projects` AS `project`;

sql [2021-06-18 07:39:25] [DEBUG]: Executing (default): SELECT `id`, `title`, `desc`, `projectUrl`, `gitupUrl`, `createdAt`, `updatedAt` FROM `projects` AS `project` LIMIT 2, 2;

sql [2021-06-18 07:39:59] [DEBUG]: Executing (default): SELECT 1+1 AS result

sql [2021-06-18 07:39:59] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tests` (`id` INTEGER auto_increment , `testName` VARCHAR(100) NOT NULL COMMENT '测试name', `testCode` VARCHAR(100) COMMENT '测试code', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:39:59] [DEBUG]: Executing (default): SHOW INDEX FROM `Tests`

sql [2021-06-18 07:39:59] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `myselves` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `enName` VARCHAR(100) COMMENT '英文名字', `znName` VARCHAR(100) COMMENT '中文名字', `sex` TINYINT(1) COMMENT '性别', `selfIntroduce` VARCHAR(255) COMMENT '个人简介', `birthday` VARCHAR(100) COMMENT '出生日期', `startWork` VARCHAR(100) COMMENT '开始工作', `schoolName` VARCHAR(100) COMMENT '学校名称', `mayjor` VARCHAR(100) COMMENT '专业', `education` VARCHAR(100) COMMENT '学历', `companyName` VARCHAR(100) COMMENT '所属公司名称', `postName` VARCHAR(100) COMMENT '岗位名称', `industry` VARCHAR(100) COMMENT '所属行业', `skill` VARCHAR(255) COMMENT '个人的技能', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:39:59] [DEBUG]: Executing (default): SHOW INDEX FROM `myselves`

sql [2021-06-18 07:39:59] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `articles` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '文章标题', `subTitle` VARCHAR(255) COMMENT '文章副标题', `imgUrl` VARCHAR(255) NOT NULL COMMENT '文章的图片，不能为空', `content` TEXT COMMENT '文章内容，存一个html文件', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:39:59] [DEBUG]: Executing (default): SHOW INDEX FROM `articles`

sql [2021-06-18 07:39:59] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `readLikes` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `readNum` INTEGER COMMENT '文章阅读量', `likeNum` INTEGER COMMENT '文章点赞量', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:39:59] [DEBUG]: Executing (default): SHOW INDEX FROM `readLikes`

sql [2021-06-18 07:39:59] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `nickName` VARCHAR(100) COMMENT '用户的昵称', `accounter` VARCHAR(100) NOT NULL COMMENT '账号', `avatar` TEXT COMMENT '用户头像', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:39:59] [DEBUG]: Executing (default): SHOW INDEX FROM `users`

sql [2021-06-18 07:39:59] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `comments` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `content` TEXT COMMENT '评论内容', `pid` INTEGER COMMENT '父级id,用于处理评论的父级节点', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:39:59] [DEBUG]: Executing (default): SHOW INDEX FROM `comments`

sql [2021-06-18 07:39:59] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `projects` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '项目的标题', `desc` TEXT COMMENT '项目描述', `projectUrl` VARCHAR(100) NOT NULL COMMENT '项目地址', `gitupUrl` VARCHAR(100) COMMENT 'gitup 地址', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:39:59] [DEBUG]: Executing (default): SHOW INDEX FROM `projects`

sql [2021-06-18 07:39:59] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagClouds` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `name` VARCHAR(100) NOT NULL COMMENT '标签名称', `code` VARCHAR(40) COMMENT '标签的code,备用', `logo` TEXT COMMENT '云图标的logo,是一个base64位的的字符串', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:39:59] [DEBUG]: Executing (default): SHOW INDEX FROM `TagClouds`

sql [2021-06-18 07:39:59] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagCloudArticle` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `TagCloudId` INTEGER , `articleId` INTEGER , PRIMARY KEY (`TagCloudId`, `articleId`), FOREIGN KEY (`TagCloudId`) REFERENCES `TagClouds` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:39:59] [DEBUG]: Executing (default): SHOW INDEX FROM `TagCloudArticle`

sql [2021-06-18 07:40:18] [DEBUG]: Executing (default): SELECT 1+1 AS result

sql [2021-06-18 07:40:18] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tests` (`id` INTEGER auto_increment , `testName` VARCHAR(100) NOT NULL COMMENT '测试name', `testCode` VARCHAR(100) COMMENT '测试code', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:40:18] [DEBUG]: Executing (default): SHOW INDEX FROM `Tests`

sql [2021-06-18 07:40:18] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `myselves` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `enName` VARCHAR(100) COMMENT '英文名字', `znName` VARCHAR(100) COMMENT '中文名字', `sex` TINYINT(1) COMMENT '性别', `selfIntroduce` VARCHAR(255) COMMENT '个人简介', `birthday` VARCHAR(100) COMMENT '出生日期', `startWork` VARCHAR(100) COMMENT '开始工作', `schoolName` VARCHAR(100) COMMENT '学校名称', `mayjor` VARCHAR(100) COMMENT '专业', `education` VARCHAR(100) COMMENT '学历', `companyName` VARCHAR(100) COMMENT '所属公司名称', `postName` VARCHAR(100) COMMENT '岗位名称', `industry` VARCHAR(100) COMMENT '所属行业', `skill` VARCHAR(255) COMMENT '个人的技能', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:40:18] [DEBUG]: Executing (default): SHOW INDEX FROM `myselves`

sql [2021-06-18 07:40:18] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `projects` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '项目的标题', `desc` TEXT COMMENT '项目描述', `projectUrl` VARCHAR(100) NOT NULL COMMENT '项目地址', `gitupUrl` VARCHAR(100) COMMENT 'gitup 地址', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:40:18] [DEBUG]: Executing (default): SHOW INDEX FROM `projects`

sql [2021-06-18 07:40:18] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `articles` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '文章标题', `subTitle` VARCHAR(255) COMMENT '文章副标题', `imgUrl` VARCHAR(255) NOT NULL COMMENT '文章的图片，不能为空', `content` TEXT COMMENT '文章内容，存一个html文件', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:40:18] [DEBUG]: Executing (default): SHOW INDEX FROM `articles`

sql [2021-06-18 07:40:18] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `readLikes` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `readNum` INTEGER COMMENT '文章阅读量', `likeNum` INTEGER COMMENT '文章点赞量', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:40:18] [DEBUG]: Executing (default): SHOW INDEX FROM `readLikes`

sql [2021-06-18 07:40:18] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `nickName` VARCHAR(100) COMMENT '用户的昵称', `accounter` VARCHAR(100) NOT NULL COMMENT '账号', `avatar` TEXT COMMENT '用户头像', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:40:18] [DEBUG]: Executing (default): SHOW INDEX FROM `users`

sql [2021-06-18 07:40:18] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `comments` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `content` TEXT COMMENT '评论内容', `pid` INTEGER COMMENT '父级id,用于处理评论的父级节点', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:40:18] [DEBUG]: Executing (default): SHOW INDEX FROM `comments`

sql [2021-06-18 07:40:18] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagClouds` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `name` VARCHAR(100) NOT NULL COMMENT '标签名称', `code` VARCHAR(40) COMMENT '标签的code,备用', `logo` TEXT COMMENT '云图标的logo,是一个base64位的的字符串', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:40:18] [DEBUG]: Executing (default): SHOW INDEX FROM `TagClouds`

sql [2021-06-18 07:40:18] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagCloudArticle` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `TagCloudId` INTEGER , `articleId` INTEGER , PRIMARY KEY (`TagCloudId`, `articleId`), FOREIGN KEY (`TagCloudId`) REFERENCES `TagClouds` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:40:18] [DEBUG]: Executing (default): SHOW INDEX FROM `TagCloudArticle`

sql [2021-06-18 07:42:47] [DEBUG]: Executing (default): SELECT 1+1 AS result

sql [2021-06-18 07:42:47] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tests` (`id` INTEGER auto_increment , `testName` VARCHAR(100) NOT NULL COMMENT '测试name', `testCode` VARCHAR(100) COMMENT '测试code', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:42:47] [DEBUG]: Executing (default): SHOW INDEX FROM `Tests`

sql [2021-06-18 07:42:47] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `myselves` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `enName` VARCHAR(100) COMMENT '英文名字', `znName` VARCHAR(100) COMMENT '中文名字', `sex` TINYINT(1) COMMENT '性别', `selfIntroduce` VARCHAR(255) COMMENT '个人简介', `birthday` VARCHAR(100) COMMENT '出生日期', `startWork` VARCHAR(100) COMMENT '开始工作', `schoolName` VARCHAR(100) COMMENT '学校名称', `mayjor` VARCHAR(100) COMMENT '专业', `education` VARCHAR(100) COMMENT '学历', `companyName` VARCHAR(100) COMMENT '所属公司名称', `postName` VARCHAR(100) COMMENT '岗位名称', `industry` VARCHAR(100) COMMENT '所属行业', `skill` VARCHAR(255) COMMENT '个人的技能', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:42:47] [DEBUG]: Executing (default): SHOW INDEX FROM `myselves`

sql [2021-06-18 07:42:47] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `projects` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '项目的标题', `desc` TEXT COMMENT '项目描述', `projectUrl` VARCHAR(100) NOT NULL COMMENT '项目地址', `gitupUrl` VARCHAR(100) COMMENT 'gitup 地址', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:42:47] [DEBUG]: Executing (default): SHOW INDEX FROM `projects`

sql [2021-06-18 07:42:47] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `articles` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '文章标题', `subTitle` VARCHAR(255) COMMENT '文章副标题', `imgUrl` VARCHAR(255) NOT NULL COMMENT '文章的图片，不能为空', `content` TEXT COMMENT '文章内容，存一个html文件', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:42:47] [DEBUG]: Executing (default): SHOW INDEX FROM `articles`

sql [2021-06-18 07:42:47] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `readLikes` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `readNum` INTEGER COMMENT '文章阅读量', `likeNum` INTEGER COMMENT '文章点赞量', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:42:47] [DEBUG]: Executing (default): SHOW INDEX FROM `readLikes`

sql [2021-06-18 07:42:47] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `nickName` VARCHAR(100) COMMENT '用户的昵称', `accounter` VARCHAR(100) NOT NULL COMMENT '账号', `avatar` TEXT COMMENT '用户头像', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:42:47] [DEBUG]: Executing (default): SHOW INDEX FROM `users`

sql [2021-06-18 07:42:47] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `comments` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `content` TEXT COMMENT '评论内容', `pid` INTEGER COMMENT '父级id,用于处理评论的父级节点', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:42:47] [DEBUG]: Executing (default): SHOW INDEX FROM `comments`

sql [2021-06-18 07:42:47] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagClouds` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `name` VARCHAR(100) NOT NULL COMMENT '标签名称', `code` VARCHAR(40) COMMENT '标签的code,备用', `logo` TEXT COMMENT '云图标的logo,是一个base64位的的字符串', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:42:47] [DEBUG]: Executing (default): SHOW INDEX FROM `TagClouds`

sql [2021-06-18 07:42:47] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagCloudArticle` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `TagCloudId` INTEGER , `articleId` INTEGER , PRIMARY KEY (`TagCloudId`, `articleId`), FOREIGN KEY (`TagCloudId`) REFERENCES `TagClouds` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:42:47] [DEBUG]: Executing (default): SHOW INDEX FROM `TagCloudArticle`

sql [2021-06-18 07:43:21] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `projects` AS `project`;

sql [2021-06-18 07:43:21] [DEBUG]: Executing (default): SELECT `id`, `title`, `desc`, `projectUrl`, `gitupUrl`, `createdAt`, `updatedAt` FROM `projects` AS `project` ORDER BY `project`.`createAt` DESC LIMIT 0, 2;

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): SELECT 1+1 AS result

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tests` (`id` INTEGER auto_increment , `testName` VARCHAR(100) NOT NULL COMMENT '测试name', `testCode` VARCHAR(100) COMMENT '测试code', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `projects` AS `project`;

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): SELECT `id`, `title`, `desc`, `projectUrl`, `gitupUrl`, `createdAt`, `updatedAt` FROM `projects` AS `project` ORDER BY `project`.`createdAt` DESC LIMIT 0, 2;

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): SHOW INDEX FROM `Tests`

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `myselves` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `enName` VARCHAR(100) COMMENT '英文名字', `znName` VARCHAR(100) COMMENT '中文名字', `sex` TINYINT(1) COMMENT '性别', `selfIntroduce` VARCHAR(255) COMMENT '个人简介', `birthday` VARCHAR(100) COMMENT '出生日期', `startWork` VARCHAR(100) COMMENT '开始工作', `schoolName` VARCHAR(100) COMMENT '学校名称', `mayjor` VARCHAR(100) COMMENT '专业', `education` VARCHAR(100) COMMENT '学历', `companyName` VARCHAR(100) COMMENT '所属公司名称', `postName` VARCHAR(100) COMMENT '岗位名称', `industry` VARCHAR(100) COMMENT '所属行业', `skill` VARCHAR(255) COMMENT '个人的技能', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): SHOW INDEX FROM `myselves`

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `projects` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '项目的标题', `desc` TEXT COMMENT '项目描述', `projectUrl` VARCHAR(100) NOT NULL COMMENT '项目地址', `gitupUrl` VARCHAR(100) COMMENT 'gitup 地址', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): SHOW INDEX FROM `projects`

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `articles` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '文章标题', `subTitle` VARCHAR(255) COMMENT '文章副标题', `imgUrl` VARCHAR(255) NOT NULL COMMENT '文章的图片，不能为空', `content` TEXT COMMENT '文章内容，存一个html文件', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): SHOW INDEX FROM `articles`

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `readLikes` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `readNum` INTEGER COMMENT '文章阅读量', `likeNum` INTEGER COMMENT '文章点赞量', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): SHOW INDEX FROM `readLikes`

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `nickName` VARCHAR(100) COMMENT '用户的昵称', `accounter` VARCHAR(100) NOT NULL COMMENT '账号', `avatar` TEXT COMMENT '用户头像', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): SHOW INDEX FROM `users`

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `comments` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `content` TEXT COMMENT '评论内容', `pid` INTEGER COMMENT '父级id,用于处理评论的父级节点', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): SHOW INDEX FROM `comments`

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagClouds` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `name` VARCHAR(100) NOT NULL COMMENT '标签名称', `code` VARCHAR(40) COMMENT '标签的code,备用', `logo` TEXT COMMENT '云图标的logo,是一个base64位的的字符串', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): SHOW INDEX FROM `TagClouds`

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagCloudArticle` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `TagCloudId` INTEGER , `articleId` INTEGER , PRIMARY KEY (`TagCloudId`, `articleId`), FOREIGN KEY (`TagCloudId`) REFERENCES `TagClouds` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:44:02] [DEBUG]: Executing (default): SHOW INDEX FROM `TagCloudArticle`

sql [2021-06-18 07:45:41] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `projects` AS `project`;

sql [2021-06-18 07:45:41] [DEBUG]: Executing (default): SELECT `id`, `title`, `desc`, `projectUrl`, `gitupUrl`, `createdAt`, `updatedAt` FROM `projects` AS `project` ORDER BY `project`.`createdAt` DESC LIMIT 0, 2;

sql [2021-06-18 07:51:50] [DEBUG]: Executing (default): SELECT 1+1 AS result

sql [2021-06-18 07:51:50] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tests` (`id` INTEGER auto_increment , `testName` VARCHAR(100) NOT NULL COMMENT '测试name', `testCode` VARCHAR(100) COMMENT '测试code', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:51:50] [DEBUG]: Executing (default): SHOW INDEX FROM `Tests`

sql [2021-06-18 07:51:50] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `myselves` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `enName` VARCHAR(100) COMMENT '英文名字', `znName` VARCHAR(100) COMMENT '中文名字', `sex` TINYINT(1) COMMENT '性别', `selfIntroduce` VARCHAR(255) COMMENT '个人简介', `birthday` VARCHAR(100) COMMENT '出生日期', `startWork` VARCHAR(100) COMMENT '开始工作', `schoolName` VARCHAR(100) COMMENT '学校名称', `mayjor` VARCHAR(100) COMMENT '专业', `education` VARCHAR(100) COMMENT '学历', `companyName` VARCHAR(100) COMMENT '所属公司名称', `postName` VARCHAR(100) COMMENT '岗位名称', `industry` VARCHAR(100) COMMENT '所属行业', `skill` VARCHAR(255) COMMENT '个人的技能', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:51:50] [DEBUG]: Executing (default): SHOW INDEX FROM `myselves`

sql [2021-06-18 07:51:50] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `projects` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '项目的标题', `desc` TEXT COMMENT '项目描述', `projectUrl` VARCHAR(100) NOT NULL COMMENT '项目地址', `gitupUrl` VARCHAR(100) COMMENT 'gitup 地址', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:51:50] [DEBUG]: Executing (default): SHOW INDEX FROM `projects`

sql [2021-06-18 07:51:50] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `articles` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '文章标题', `subTitle` VARCHAR(255) COMMENT '文章副标题', `imgUrl` VARCHAR(255) NOT NULL COMMENT '文章的图片，不能为空', `content` TEXT COMMENT '文章内容，存一个html文件', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:51:50] [DEBUG]: Executing (default): SHOW INDEX FROM `articles`

sql [2021-06-18 07:51:50] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `readLikes` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `readNum` INTEGER COMMENT '文章阅读量', `likeNum` INTEGER COMMENT '文章点赞量', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:51:50] [DEBUG]: Executing (default): SHOW INDEX FROM `readLikes`

sql [2021-06-18 07:51:50] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `nickName` VARCHAR(100) COMMENT '用户的昵称', `accounter` VARCHAR(100) NOT NULL COMMENT '账号', `avatar` TEXT COMMENT '用户头像', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:51:50] [DEBUG]: Executing (default): SHOW INDEX FROM `users`

sql [2021-06-18 07:51:50] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `comments` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `content` TEXT COMMENT '评论内容', `pid` INTEGER COMMENT '父级id,用于处理评论的父级节点', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:51:50] [DEBUG]: Executing (default): SHOW INDEX FROM `comments`

sql [2021-06-18 07:51:50] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagClouds` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `name` VARCHAR(100) NOT NULL COMMENT '标签名称', `code` VARCHAR(40) COMMENT '标签的code,备用', `logo` TEXT COMMENT '云图标的logo,是一个base64位的的字符串', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:51:50] [DEBUG]: Executing (default): SHOW INDEX FROM `TagClouds`

sql [2021-06-18 07:51:50] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagCloudArticle` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `TagCloudId` INTEGER , `articleId` INTEGER , PRIMARY KEY (`TagCloudId`, `articleId`), FOREIGN KEY (`TagCloudId`) REFERENCES `TagClouds` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:51:50] [DEBUG]: Executing (default): SHOW INDEX FROM `TagCloudArticle`

sql [2021-06-18 07:54:02] [DEBUG]: Executing (default): SELECT 1+1 AS result

sql [2021-06-18 07:54:02] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tests` (`id` INTEGER auto_increment , `testName` VARCHAR(100) NOT NULL COMMENT '测试name', `testCode` VARCHAR(100) COMMENT '测试code', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:54:02] [DEBUG]: Executing (default): SHOW INDEX FROM `Tests`

sql [2021-06-18 07:54:02] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `myselves` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `enName` VARCHAR(100) COMMENT '英文名字', `znName` VARCHAR(100) COMMENT '中文名字', `sex` TINYINT(1) COMMENT '性别', `selfIntroduce` VARCHAR(255) COMMENT '个人简介', `birthday` VARCHAR(100) COMMENT '出生日期', `startWork` VARCHAR(100) COMMENT '开始工作', `schoolName` VARCHAR(100) COMMENT '学校名称', `mayjor` VARCHAR(100) COMMENT '专业', `education` VARCHAR(100) COMMENT '学历', `companyName` VARCHAR(100) COMMENT '所属公司名称', `postName` VARCHAR(100) COMMENT '岗位名称', `industry` VARCHAR(100) COMMENT '所属行业', `skill` VARCHAR(255) COMMENT '个人的技能', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:54:02] [DEBUG]: Executing (default): SHOW INDEX FROM `myselves`

sql [2021-06-18 07:54:02] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `projects` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '项目的标题', `desc` TEXT COMMENT '项目描述', `projectUrl` VARCHAR(100) NOT NULL COMMENT '项目地址', `gitupUrl` VARCHAR(100) COMMENT 'gitup 地址', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:54:02] [DEBUG]: Executing (default): SHOW INDEX FROM `projects`

sql [2021-06-18 07:54:02] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `articles` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '文章标题', `subTitle` VARCHAR(255) COMMENT '文章副标题', `imgUrl` VARCHAR(255) NOT NULL COMMENT '文章的图片，不能为空', `content` TEXT COMMENT '文章内容，存一个html文件', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:54:02] [DEBUG]: Executing (default): SHOW INDEX FROM `articles`

sql [2021-06-18 07:54:02] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `readLikes` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `readNum` INTEGER COMMENT '文章阅读量', `likeNum` INTEGER COMMENT '文章点赞量', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:54:02] [DEBUG]: Executing (default): SHOW INDEX FROM `readLikes`

sql [2021-06-18 07:54:02] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `nickName` VARCHAR(100) COMMENT '用户的昵称', `accounter` VARCHAR(100) NOT NULL COMMENT '账号', `avatar` TEXT COMMENT '用户头像', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:54:02] [DEBUG]: Executing (default): SHOW INDEX FROM `users`

sql [2021-06-18 07:54:02] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `comments` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `content` TEXT COMMENT '评论内容', `pid` INTEGER COMMENT '父级id,用于处理评论的父级节点', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:54:02] [DEBUG]: Executing (default): SHOW INDEX FROM `comments`

sql [2021-06-18 07:54:02] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagClouds` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `name` VARCHAR(100) NOT NULL COMMENT '标签名称', `code` VARCHAR(40) COMMENT '标签的code,备用', `logo` TEXT COMMENT '云图标的logo,是一个base64位的的字符串', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:54:02] [DEBUG]: Executing (default): SHOW INDEX FROM `TagClouds`

sql [2021-06-18 07:54:02] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagCloudArticle` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `TagCloudId` INTEGER , `articleId` INTEGER , PRIMARY KEY (`TagCloudId`, `articleId`), FOREIGN KEY (`TagCloudId`) REFERENCES `TagClouds` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:54:02] [DEBUG]: Executing (default): SHOW INDEX FROM `TagCloudArticle`

sql [2021-06-18 07:54:11] [DEBUG]: Executing (default): SELECT 1+1 AS result

sql [2021-06-18 07:54:11] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tests` (`id` INTEGER auto_increment , `testName` VARCHAR(100) NOT NULL COMMENT '测试name', `testCode` VARCHAR(100) COMMENT '测试code', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:54:11] [DEBUG]: Executing (default): SHOW INDEX FROM `Tests`

sql [2021-06-18 07:54:11] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `myselves` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `enName` VARCHAR(100) COMMENT '英文名字', `znName` VARCHAR(100) COMMENT '中文名字', `sex` TINYINT(1) COMMENT '性别', `selfIntroduce` VARCHAR(255) COMMENT '个人简介', `birthday` VARCHAR(100) COMMENT '出生日期', `startWork` VARCHAR(100) COMMENT '开始工作', `schoolName` VARCHAR(100) COMMENT '学校名称', `mayjor` VARCHAR(100) COMMENT '专业', `education` VARCHAR(100) COMMENT '学历', `companyName` VARCHAR(100) COMMENT '所属公司名称', `postName` VARCHAR(100) COMMENT '岗位名称', `industry` VARCHAR(100) COMMENT '所属行业', `skill` VARCHAR(255) COMMENT '个人的技能', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:54:11] [DEBUG]: Executing (default): SHOW INDEX FROM `myselves`

sql [2021-06-18 07:54:11] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `projects` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '项目的标题', `desc` TEXT COMMENT '项目描述', `projectUrl` VARCHAR(100) NOT NULL COMMENT '项目地址', `gitupUrl` VARCHAR(100) COMMENT 'gitup 地址', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:54:11] [DEBUG]: Executing (default): SHOW INDEX FROM `projects`

sql [2021-06-18 07:54:11] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `articles` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `title` VARCHAR(255) NOT NULL COMMENT '文章标题', `subTitle` VARCHAR(255) COMMENT '文章副标题', `imgUrl` VARCHAR(255) NOT NULL COMMENT '文章的图片，不能为空', `content` TEXT COMMENT '文章内容，存一个html文件', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:54:11] [DEBUG]: Executing (default): SHOW INDEX FROM `articles`

sql [2021-06-18 07:54:11] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `readLikes` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `readNum` INTEGER COMMENT '文章阅读量', `likeNum` INTEGER COMMENT '文章点赞量', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:54:11] [DEBUG]: Executing (default): SHOW INDEX FROM `readLikes`

sql [2021-06-18 07:54:11] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `nickName` VARCHAR(100) COMMENT '用户的昵称', `accounter` VARCHAR(100) NOT NULL COMMENT '账号', `avatar` TEXT COMMENT '用户头像', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:54:11] [DEBUG]: Executing (default): SHOW INDEX FROM `users`

sql [2021-06-18 07:54:11] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `comments` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `content` TEXT COMMENT '评论内容', `pid` INTEGER COMMENT '父级id,用于处理评论的父级节点', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `articleId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:54:11] [DEBUG]: Executing (default): SHOW INDEX FROM `comments`

sql [2021-06-18 07:54:11] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagClouds` (`id` INTEGER auto_increment UNIQUE  COMMENT '自增主键id', `name` VARCHAR(100) NOT NULL COMMENT '标签名称', `code` VARCHAR(40) COMMENT '标签的code,备用', `logo` TEXT COMMENT '云图标的logo,是一个base64位的的字符串', `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;

sql [2021-06-18 07:54:11] [DEBUG]: Executing (default): SHOW INDEX FROM `TagClouds`

sql [2021-06-18 07:54:11] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `TagCloudArticle` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `TagCloudId` INTEGER , `articleId` INTEGER , PRIMARY KEY (`TagCloudId`, `articleId`), FOREIGN KEY (`TagCloudId`) REFERENCES `TagClouds` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`articleId`) REFERENCES `articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

sql [2021-06-18 07:54:11] [DEBUG]: Executing (default): SHOW INDEX FROM `TagCloudArticle`

